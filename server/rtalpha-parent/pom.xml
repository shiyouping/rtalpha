<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>com.rtalpha</groupId>
	<artifactId>rtalpha-parent</artifactId>
	<version>0.3.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>RT Alpha - Parent</name>
	<url>http://www.rtalpha.com</url>
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.11.RELEASE</version>
	</parent>

	<properties>
		<!-- Core properties -->
		<java.version>1.8</java.version>
		<maven.version>3.5.2</maven.version>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<!-- Keep spring-boot-starter version consistent with the version of parent -->
		<spring-boot-starter.version>1.5.11.RELEASE</spring-boot-starter.version>
		<spring-cloud-dependencies.version>Edgware.SR3</spring-cloud-dependencies.version>
		<generated.sources>${project.build.directory}/generated-sources/java</generated.sources>
		<generated.test.sources>${project.build.directory}/generated-test-sources/java</generated.test.sources>

		<!-- Dependency properties -->
		<pojomatic.version>2.0.1</pojomatic.version>
		<mapstruct.version>1.2.0.Final</mapstruct.version>
		<guava.version>23.0</guava.version>
		<jsr305.version>3.0.2</jsr305.version>
		<commons-lang3.version>3.7</commons-lang3.version>
		<commons-math3.version>3.6.1</commons-math3.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<commons-beanutils.version>1.9.3</commons-beanutils.version>
		<commons-io.version>2.6</commons-io.version>
		<commons-validator.version>1.6</commons-validator.version>
		<reflections.version>0.9.11</reflections.version>
		<inject.version>1</inject.version>
		<querydsl.version>4.2.1</querydsl.version>
		<powermock.version>1.7.3</powermock.version>
		<assertj.version>3.9.1</assertj.version>
		<greenmail.version>1.5.7</greenmail.version>
		<embedded-mongo.version>2.0.3</embedded-mongo.version>
		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
		<thymeleaf-layout-dialect.version>2.3.0</thymeleaf-layout-dialect.version>
		<infinispan-spring4.version>8.0.2.Final</infinispan-spring4.version>
		<!-- Find the spring-cloud-contract version number from spring-cloud-dependencies 
			to keep compatibility -->
		<spring-cloud-contract.version>1.2.4.RELEASE</spring-cloud-contract.version>

		<!-- Maven plugin properties -->
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
		<apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
		<buildplan-maven-plugin.version>1.3</buildplan-maven-plugin.version>
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>

			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>${reflections.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons-math3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.pojomatic</groupId>
				<artifactId>pojomatic</artifactId>
				<version>${pojomatic.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-jdk8</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot-starter.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot-starter.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot-starter.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-spring4</artifactId>
				<version>${infinispan-spring4.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${inject.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.querydsl</groupId>
				<artifactId>querydsl-mongodb</artifactId>
				<version>${querydsl.version}</version>
			</dependency>

			<dependency>
				<groupId>com.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-contract-verifier</artifactId>
				<version>${spring-cloud-contract.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>de.flapdoodle.embed</groupId>
				<artifactId>de.flapdoodle.embed.mongo</artifactId>
				<version>${embedded-mongo.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-core</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail</artifactId>
				<version>${greenmail.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- Required by maven surefire plugin -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<!-- Handle @ in resource files -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<!-- Handle @ in resource files -->
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- See details at http://maven.apache.org/enforcer/maven-enforcer-plugin/ -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<id>enforce-maven-3</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${maven.version}</version>
									</requireMavenVersion>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- See details at https://maven.apache.org/plugins/maven-compiler-plugin/ -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<useIncrementalCompilation>false</useIncrementalCompilation>
						<generatedSourcesDirectory>${generated.sources}</generatedSourcesDirectory>
						<generatedTestSourcesDirectory>${generated.test.sources}</generatedTestSourcesDirectory>
						<annotationProcessorPaths>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
						</annotationProcessorPaths>
						<compilerArgs>
							<compilerArg>
								-Amapstruct.suppressGeneratorTimestamp=true
							</compilerArg>
							<compilerArg>
								-Amapstruct.suppressGeneratorVersionInfoComment=true
							</compilerArg>
							<compilerArg>
								-Amapstruct.defaultComponentModel=spring
							</compilerArg>
							<compilerArg>
								-Amapstruct.unmappedTargetPolicy=IGNORE
							</compilerArg>
						</compilerArgs>
					</configuration>
				</plugin>

				<plugin>
					<!-- See details at http://maven.apache.org/components/surefire/maven-surefire-plugin/ -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- See details at https://github.com/querydsl/apt-maven-plugin -->
					<groupId>com.mysema.maven</groupId>
					<artifactId>apt-maven-plugin</artifactId>
					<version>${apt-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.querydsl</groupId>
							<artifactId>querydsl-apt</artifactId>
							<version>${querydsl.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<!-- See details at https://github.com/jcgay/buildplan-maven-plugin -->
					<groupId>fr.jcgay.maven.plugins</groupId>
					<artifactId>buildplan-maven-plugin</artifactId>
					<version>${buildplan-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- See details at https://cloud.spring.io/spring-cloud-contract/spring-cloud-contract-maven-plugin/ -->
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-contract-maven-plugin</artifactId>
					<version>${spring-cloud-contract.version}</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<!-- See details at https://docs.spring.io/spring-boot/docs/${spring-boot-starter.version}/maven-plugin/ -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-starter.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.springframework.cloud</groupId>
										<artifactId>spring-cloud-contract-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>convert</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>fr.jcgay.maven.plugins</groupId>
				<artifactId>buildplan-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
